//INSERTION SORT
/*
* This code is generated by KRISHNA AGRAWAL
*/

//#include "ArrayInput.cpp"

class SelectionSort
{
	public:	
    int data[7];
    int *arr;
	void fillGreenColor(int);
    void performSelectionSort();	
	void printArray(int[],int);
};

void SelectionSort :: performSelectionSort()
{
	ArrayInput ai;
	ai.inputFrame(4); //4 means -> ArrayInput is called by Selection Sort
	arr=ai.getdata(4);
	int n=7; //Array Length 
	for(int i=0;i<n;i++) //indicates that, This call from selection sort
	{
		data[i]= arr[i];
	}
	_Main obj;
	obj.init();
	obj.footer();
	
	int i,j,min_idx;
	settextstyle(10,0,7);
	setcolor(YELLOW);	outtextxy(120,20,"SELECTION SORT");
	settextstyle(10,0,3);	setcolor(WHITE);
	int minIndex=0;
	for(i=0;i<n-1;i++)
	{
		printArray(data,n);    getch();
		min_idx = i;
		for(j=i+1;j<n;j++)
		{
			if(data[j] < data[min_idx])
				min_idx = j;
		}
		
		if(min_idx!=i)
		{
			int temp;
			temp = data[min_idx];
			data[min_idx] = data[i];
			data[i] = temp;	
		}
				
	}printArray(data,n);
}


void SelectionSort :: printArray(int arr[], int n)
{
	static int y1=100,y2=150,dataX=100,dataY=125;;
	static int counter=-1;
	counter++;
	char element[20];
	//4 Boundary lines
	line(50,y1,50,y2);	line(50,y2,1400,y2);	line(1400,y2,1400,y1);	line(1400,y1,50,y1);
	//	inner lines 
 	line(200,y1,200,y2);	line(400,y1,400,y2);	line(600,y1,600,y2);	line(800,y1,800,y2);	line(1000,y1,1000,y2);	line(1200,y1,1200,y2);
	y1 += 100; y2 += 100;
	//dislay()
		
	for(int t=0;t<7;t++)  
	{
		sprintf(element,"%d",arr[t]);
		outtextxy(dataX,dataY,element);
		dataX = dataX+200;	
	}
	dataY = dataY+100;
	dataX =100;	

	fillGreenColor(counter);
}

void SelectionSort :: fillGreenColor(int nn)
{
	getch();
	if(nn==0) return;
	int x=100;
	static int y=225;
	setfillstyle(1,GREEN);
	while(nn!=0)
	{
		floodfill(x,y,15);
		nn--;
		x+=200;	
	}
	y+=100;
}

