//ARRAY INPUT
/*
* This code is generated by KRISHNA AGRAWAL
*/

class ArrayInput
{
	public:
		void inputFrame(int);
		int* getdata(int);
};

void ArrayInput :: inputFrame(int sortingNumber)
{
	_Main obj;
	obj.init();
	setcolor(5);//Purple
	settextstyle(1,0,7);//font,direction,charsize
	
	switch(sortingNumber)
	{
		case 3: outtextxy(100,50,"INSERTION SORT VISUALIZER"); break;
		case 4: outtextxy(100,50,"SELECTION SORT VISUALIZER"); break;
		case 5: outtextxy(100,50,"BUBBLE SORT VISUALIZER"); break;
	}
	
	setcolor(3);
	settextstyle(6,0,7);
	outtextxy(150,150,"Input");
	setcolor(12);
//	Border lines
	line(150,175,50,175);
	line(50,175,50,800);
	line(50,800,1400,800);
	line(1400,800,1400,175);
	line(1400,175,350,175);
	
	setcolor(4);
	settextstyle(6,0,6);
	outtextxy(150,250,"Array Size ");
	outtextxy(150,350,"Data Elements ");
	line(500,290,700,290);
	
	char *total_elements = "7";
	outtextxy(600,240,total_elements); 
}//End of Input Frame Function()

int* ArrayInput :: getdata(int sortingNumber)
{
	int data=0,xPos=180,circle_xAxis=200;	 	int array[7],index=0,length = 7;  /*Array_size*/
	char res[10];
	string sp; 
	_Main obj;
	for(int c=1;c<=length;c++)
	{
		setcolor(13);		settextstyle(5,0,5);
		circle(circle_xAxis,600,65);	//1280,630
		data=0;  sp=" ";
		for(int countDigit=0;countDigit<3;	)
		{		//while(character!=13);//ASCII key of ENTER
			try{
					fflush(stdin);
					char d = getch();
					setcolor(15);//White
					settextstyle(1,0,3);
					if(d>=48 && d<=57)	
					{
						data = (data*10) + ( d-'0');
					    countDigit++;
						char *coc = obj.int_to_charP(data);
						outtextxy(xPos,580,coc);		
					}
					else if(d==13)//ASCII of Enter key --> indicate user entered the data 
						break;
					else throw -1;
				}
			catch (int error)
			{
				setcolor(RED);
				settextstyle(1,0,4);
				outtextxy(630,730,"Invalid Input Exception");
				delay(2000);
				obj.clearPixel(620,720,1200,780);//left,top,right,bottom
			}
			
		}//End of inner for loop (Count digit for loop)
		circle_xAxis += 180; xPos += 180;	
		array[index] = data;	index++;
	}//End of outer for loop
		
	/* Now we are in the outside of the loop, it indicates that we are successfully take all values of the array,
	   on which the sorting algorithm may have to be perform*/

	return (array);
}

