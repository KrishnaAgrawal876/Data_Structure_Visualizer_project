 //STACK
/*
* This code is generated by KRISHNA AGRAWAL
*/



class GStack
{
	int stack[size];
	int top=-1;
	public:	
	~GStack();
	void stackFrame();
	void stackInput();
	void push();//insert the element 
	void pop();//delete the element 	
};


void GStack :: stackFrame()
{
	_Main obj;
	obj.init();
	obj.footer();
	
	setcolor(2);//Green
	settextstyle(1,0,7);//font,direction,charsize
	outtextxy(100,50,"Stack (Static Implementation)");
	
	setcolor(15);
//	Four boundary wall of stack		
	line(150,200,350,200);
	line(350,200,350,700);
	line(350,700,150,700);
	line(150,700,150,200);
	//Nine horizontal line
	line(150,250,350,250);
	line(150,300,350,300);
	line(150,350,350,350);
	line(150,400,350,400);
	line(150,450,350,450);
	line(150,500,350,500);
	line(150,550,350,550);
	line(150,600,350,600);
	line(150,650,350,650);
	
	
	settextstyle(10,0,5);//font_style,horizontal,font_size
	char str[]="STACK";
	outtextxy(175,150,str);
	settextstyle(8,0,2);
    outtextxy(125,675,"0");	
	outtextxy(125,625,"1");
	outtextxy(125,575,"2");
	outtextxy(125,525,"3");
	outtextxy(125,475,"4");
	outtextxy(125,425,"5");
	outtextxy(125,375,"6");
	outtextxy(125,325,"7");
	outtextxy(125,275,"8");
	outtextxy(125,225,"9"); 
		
	settextstyle(1,0,5);//font,direction,charsize
	outtextxy(400,250,"Top");
	rectangle(400,300,550,390);//left,top,right,bottom
	settextstyle(1,0,5);
	outtextxy(440,330,"-1");
	
	setcolor(14);//Yellow
	settextstyle(1,0,7);
	outtextxy(600,350,"Press 1 for Push");
	outtextxy(600,450,"Press 2 for Pop");
	setcolor(15);
}//End of stackFrame function()


void GStack ::  stackInput()
{
	_Main obj;
	int choice;
	char inputCh,another='y';
	char res[10];
	
	do{ 
		obj.clearPixel(600,550,1400,750);
		setcolor(15);//White
		rectangle(600,600,1400,700); //delay(5000);do left,top,right,bottom
		circle(1300,650,65);
		settextstyle(1,0,3);
		outtextxy(630,630,"	Enter Your Choice ");
		try{
			fflush(stdin);		
		 	inputCh = getch();
		 	sprintf(res,"%c",inputCh);
		 	outtextxy(1280,630,res);
			 if( !(inputCh>=48 && inputCh<=57) )
				throw  -1;
		}
		catch (int error)
		{
			setcolor(RED);
			settextstyle(1,0,4);
			outtextxy(630,630,"Invalid Input Exception");
			delay(2000);
			continue ;
		}					
						
		choice = inputCh - '0';//char to int conversion
		delay(1000);
		switch(choice)
		{
			case 1: push(); break;
			case 2: pop();  break;
			default: setcolor(RED);
					 settextstyle(1,0,5);
					 outtextxy(630,630," INVALID CHOICE");
					 delay(2000);
		} 
		settextstyle(1,0,3);
		obj.clearPixel(600,550,1400,750);
		setcolor(15);//White
		outtextxy(1250,630,"		       		");//erasing the content of inside the circle
		rectangle(600,600,1400,700); //delay(5000);do left,top,right,bottom
		setcolor(15);
				
		outtextxy(630,630,"Would you like to proceed?	");
		fflush(stdin);
		another = getch();
				
	}while(another=='y' || another=='Y');				
}//End of stackInput function()


void GStack :: push()
{
	_Main obj;
	int data=0,num=0;
	bool valueSet=false,minusPresent=false;
	char d;
	obj.clearPixel(600,550,1400,750);
	
	if( top>=(size-1) ) 
	{
		setcolor(4);//RED
		settextstyle(1,0,5);
		outtextxy(630,630,"OVER-FLOW");//yha ki coading baki hai
		delay(2000);
	}
	else{
			for(int countDigit=0;countDigit<3;	)
			{
				if(countDigit>=3) break;
				setcolor(15);//White
				settextstyle(1,0,2);
				rectangle(600,600,1400,700); //delay(5000);do left,top,right,bottom
				circle(1300,650,65);
				outtextxy(600,730,"WARNING: only Integer Input upto 3 digits are accpted");
				settextstyle(1,0,3);//font,direction,charsize
				outtextxy(630,630,"Enter the value to be inserted			");
				try{
						fflush(stdin);
						char d = getch();
						setcolor(15);//White
						settextstyle(1,0,3);
						if(d>=48 && d<=57)	
						{
							data = (data*10) + ( d-'0');
					        countDigit++;
							char *coc = obj.int_to_charP(data);
							outtextxy(1255,630,coc);		
						}
						else if(d==13)//ASCII of Enter key --> indicate user entered the data 
							break;
						else if(d==45 && countDigit==0)//ASCII of Minus Sign
						{
							outtextxy(1245,630,"-");
							minusPresent = true;
						}
						else throw -1;
					}
					catch(int x){
								obj.clearPixel(630,625,1200,655);
								setcolor(RED);
								settextstyle(1,0,3);	//data=0; countDigit--;  outtextxy(1255,630,"		");
						outtextxy(630,630,"Invalid Input Exception");
						delay(2000);  return;
					}
				
			}//End of for loop				
			if(data==0)	//User nai koi value nahi only enter press kiya toh zero insert ho jayega
			return;
			
			//top value -1 ko erase
			obj.clearPixel(420,320,530,370);//left,top,right,bottom
			char sr[10];
			sprintf(sr,"%d",data);
			top = top+1;
			stack[top] = data;
			settextstyle(10,0,4);
			setcolor(15);
			switch(top)
			{
				case 0: if (minusPresent==true) outtextxy(220,665,"- ");
						    outtextxy(230,665,sr); //data Element
							outtextxy(440,330,"0"); //top Position
							break; 
				case 1: if(minusPresent==true) outtextxy(220,615,"- ");
				            outtextxy(230,615,sr); //data Element	 
							outtextxy(440,330,"1"); //top Position
							break;
				case 2: if(minusPresent==true) outtextxy(220,565,"- ");
				            outtextxy(230,565,sr); //data Element	 
							outtextxy(440,330,"2"); //top Position
							break; 
				case 3: if(minusPresent==true) outtextxy(220,515,"- ");
				            outtextxy(230,515,sr); //data Element	 
							outtextxy(440,330,"3"); //top Position
							break; 
				case 4: if(minusPresent==true) outtextxy(220,465,"- ");
				            outtextxy(230,465,sr); //data Element	 
							outtextxy(440,330,"4"); //top Position
							break; 
				case 5: if(minusPresent==true) outtextxy(220,415,"- ");
				            outtextxy(230,415,sr); //data Element	 
							outtextxy(440,330,"5"); //top Position
							break; 
				case 6: if(minusPresent==true) outtextxy(220,365,"- ");
				            outtextxy(230,365,sr); //data Element	 
							outtextxy(440,330,"6"); //top Position
							break; 
				case 7: if(minusPresent==true) outtextxy(220,315,"- ");
				            outtextxy(230,315,sr); //data Element	 
							outtextxy(440,330,"7"); //top Position
							break; 
				case 8: if(minusPresent==true) outtextxy(220,265,"- ");
				            outtextxy(230,265,sr); //data Element	 
							outtextxy(440,330,"8"); //top Position
							break; 
				case 9:	if(minusPresent==true) outtextxy(220,215,"- ");
				            outtextxy(230,215,sr); //data Element	 
							outtextxy(440,330,"9"); //top Position
							break; 
				
			}//End of switch
			char msg[20];
			setcolor(11);
			settextstyle(10,0,6);
			if(minusPresent)
				sprintf(msg,"- %d inserted successfully	",data);
			else
				sprintf(msg," %d inserted successfully",data);	
			outtextxy(650,200,msg);
			
			delay(3000);
			obj.clearPixel(630,180,1500,250);
	}//End of else
}//End of push function()


void GStack :: pop()
{
	_Main obj;
	int temp;  char msg[20];
	if(top==-1)
	{
		setcolor(4);//RED
		settextstyle(1,0,5);
		outtextxy(630,630,"UNDER FLOW 		    ");
		delay(2000); return;
	}
	else{
			temp=stack[top];
			stack[top]=0;
		
			setcolor(getbkcolor());
			settextstyle(10,0,4); 
			switch(top)
			{
				case 0:  outtextxy(220,665,"    "); break;
				case 1:	 outtextxy(220,615,"    "); break;
				case 2:  outtextxy(220,565,"    "); break;
				case 3:  outtextxy(220,515,"    "); break;
				case 4:  outtextxy(220,465,"    "); break;
				case 5:  outtextxy(220,415,"    "); break;
				case 6:  outtextxy(220,365,"    "); break;
				case 7:  outtextxy(220,315,"    "); break;
				case 8:  outtextxy(220,265,"    "); break;
				case 9:	 outtextxy(220,215,"    "); break;
			}   top--;
			
				//getch();//printf("%d deleted Successfully....");	
			setcolor(15);
			char *t = obj.int_to_charP(top) ;
			outtextxy(440,330,t); //top Position
			
	}//end of else
	setcolor(11);
	settextstyle(10,0,6);
	sprintf(msg," %d deleted successfully ",temp);
	outtextxy(650,200,msg);
			
	delay(3000);
	obj.clearPixel(630,180,1500,250);
}//End of push function()

GStack :: ~GStack()
{
	top = -1;
}
